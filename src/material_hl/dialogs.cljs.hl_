(ns material-hl.dialogs
  (:refer-hoplon :exclude [dialog])
  (:require [material-hl.core :as core]))

(def ^:dynamic *full-width* false)
(def ^:dynamic *dialogs* (cell {}))

(defelem dialog [attr kids]
  (let []
    (hoplon.core/dialog (core/assoc-class attr {:mdl-dialog true})
      kids)))

(defelem dialog-title [attr kids]
  (let []
    (div (core/assoc-class attr {:mdl-dialog__title true})
      kids)))

(defelem dialog-content [attr kids]
  (let []
    (div (core/assoc-class attr {:mdl-dialog__content true})
      kids)))

(defelem dialog-actions [attr kids]
  (let [wide (or (:full-width attr) *full-width*)]
    (div (core/assoc-class attr {:mdl-dialog__actions true
                                 :mdl-dialog__actions--full-width wide})
      kids)))

(def dialogs #(for-tpl [d *dialogs*] (val d)))
